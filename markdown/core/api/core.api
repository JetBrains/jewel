public abstract interface class org/jetbrains/jewel/markdown/BlockWithInlineMarkdown {
	public abstract fun getInlineContent ()Ljava/util/List;
}

public abstract interface class org/jetbrains/jewel/markdown/InlineMarkdown {
	public abstract fun getChildren ()Ljava/util/Iterator;
	public abstract fun getNativeNode ()Lorg/commonmark/node/Node;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Code : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/Code;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$Code;
	public static fun constructor-impl (Lorg/commonmark/node/Code;)Lorg/commonmark/node/Code;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/Code;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/Code;Lorg/commonmark/node/Code;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/Code;)Ljava/util/Iterator;
	public fun getNativeNode ()Lorg/commonmark/node/Code;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/Code;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/Code;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/Code;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$CustomNode : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/CustomNode;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$CustomNode;
	public static fun constructor-impl (Lorg/commonmark/node/CustomNode;)Lorg/commonmark/node/CustomNode;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/CustomNode;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/CustomNode;Lorg/commonmark/node/CustomNode;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/CustomNode;)Ljava/util/Iterator;
	public fun getNativeNode ()Lorg/commonmark/node/CustomNode;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/CustomNode;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/CustomNode;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/CustomNode;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$DefaultImpls {
	public static fun getChildren (Lorg/jetbrains/jewel/markdown/InlineMarkdown;)Ljava/util/Iterator;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Emphasis : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/Emphasis;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$Emphasis;
	public static fun constructor-impl (Lorg/commonmark/node/Emphasis;)Lorg/commonmark/node/Emphasis;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/Emphasis;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/Emphasis;Lorg/commonmark/node/Emphasis;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/Emphasis;)Ljava/util/Iterator;
	public fun getNativeNode ()Lorg/commonmark/node/Emphasis;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/Emphasis;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/Emphasis;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/Emphasis;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$HardLineBreak : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/HardLineBreak;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$HardLineBreak;
	public static fun constructor-impl (Lorg/commonmark/node/HardLineBreak;)Lorg/commonmark/node/HardLineBreak;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/HardLineBreak;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/HardLineBreak;Lorg/commonmark/node/HardLineBreak;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/HardLineBreak;)Ljava/util/Iterator;
	public fun getNativeNode ()Lorg/commonmark/node/HardLineBreak;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/HardLineBreak;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/HardLineBreak;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/HardLineBreak;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$HtmlInline : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/HtmlInline;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$HtmlInline;
	public static fun constructor-impl (Lorg/commonmark/node/HtmlInline;)Lorg/commonmark/node/HtmlInline;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/HtmlInline;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/HtmlInline;Lorg/commonmark/node/HtmlInline;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/HtmlInline;)Ljava/util/Iterator;
	public fun getNativeNode ()Lorg/commonmark/node/HtmlInline;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/HtmlInline;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/HtmlInline;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/HtmlInline;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Image : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/Image;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$Image;
	public static fun constructor-impl (Lorg/commonmark/node/Image;)Lorg/commonmark/node/Image;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/Image;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/Image;Lorg/commonmark/node/Image;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/Image;)Ljava/util/Iterator;
	public fun getNativeNode ()Lorg/commonmark/node/Image;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/Image;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/Image;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/Image;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Link : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/Link;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$Link;
	public static fun constructor-impl (Lorg/commonmark/node/Link;)Lorg/commonmark/node/Link;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/Link;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/Link;Lorg/commonmark/node/Link;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/Link;)Ljava/util/Iterator;
	public fun getNativeNode ()Lorg/commonmark/node/Link;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/Link;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/Link;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/Link;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Paragraph : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/Paragraph;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$Paragraph;
	public static fun constructor-impl (Lorg/commonmark/node/Paragraph;)Lorg/commonmark/node/Paragraph;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/Paragraph;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/Paragraph;Lorg/commonmark/node/Paragraph;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/Paragraph;)Ljava/util/Iterator;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun getNativeNode ()Lorg/commonmark/node/Paragraph;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/Paragraph;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/Paragraph;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/Paragraph;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$SoftLineBreak : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/SoftLineBreak;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$SoftLineBreak;
	public static fun constructor-impl (Lorg/commonmark/node/SoftLineBreak;)Lorg/commonmark/node/SoftLineBreak;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/SoftLineBreak;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/SoftLineBreak;Lorg/commonmark/node/SoftLineBreak;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/SoftLineBreak;)Ljava/util/Iterator;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun getNativeNode ()Lorg/commonmark/node/SoftLineBreak;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/SoftLineBreak;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/SoftLineBreak;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/SoftLineBreak;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$StrongEmphasis : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/StrongEmphasis;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$StrongEmphasis;
	public static fun constructor-impl (Lorg/commonmark/node/StrongEmphasis;)Lorg/commonmark/node/StrongEmphasis;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/StrongEmphasis;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/StrongEmphasis;Lorg/commonmark/node/StrongEmphasis;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/StrongEmphasis;)Ljava/util/Iterator;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun getNativeNode ()Lorg/commonmark/node/StrongEmphasis;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/StrongEmphasis;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/StrongEmphasis;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/StrongEmphasis;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Text : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final synthetic fun box-impl (Lorg/commonmark/node/Text;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$Text;
	public static fun constructor-impl (Lorg/commonmark/node/Text;)Lorg/commonmark/node/Text;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/commonmark/node/Text;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/commonmark/node/Text;Lorg/commonmark/node/Text;)Z
	public fun getChildren ()Ljava/util/Iterator;
	public static fun getChildren-impl (Lorg/commonmark/node/Text;)Ljava/util/Iterator;
	public synthetic fun getNativeNode ()Lorg/commonmark/node/Node;
	public fun getNativeNode ()Lorg/commonmark/node/Text;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/commonmark/node/Text;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/commonmark/node/Text;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/commonmark/node/Text;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdownKt {
	public static final fun toInlineNode (Lorg/commonmark/node/Node;)Lorg/jetbrains/jewel/markdown/InlineMarkdown;
}

public abstract interface class org/jetbrains/jewel/markdown/MarkdownBlock {
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$BlockQuote : org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$BlockQuote;
	public static synthetic fun copy$default (Lorg/jetbrains/jewel/markdown/MarkdownBlock$BlockQuote;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$BlockQuote;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock : org/jetbrains/jewel/markdown/MarkdownBlock {
	public abstract fun getContent ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock : org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock {
	public static final field $stable I
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2-EIRQHX8 ()Ljava/lang/String;
	public final fun copy-k5OzbWQ (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock;
	public static synthetic fun copy-k5OzbWQ$default (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock;
	public fun equals (Ljava/lang/Object;)Z
	public fun getContent ()Ljava/lang/String;
	public final fun getMimeType-EIRQHX8 ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock : org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock;
	public static synthetic fun copy$default (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock;
	public fun equals (Ljava/lang/Object;)Z
	public fun getContent ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/jewel/markdown/MarkdownBlock$CustomBlock : org/jetbrains/jewel/markdown/MarkdownBlock {
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$Heading : org/jetbrains/jewel/markdown/BlockWithInlineMarkdown, org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;I)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()I
	public final fun copy (Ljava/util/List;I)Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;
	public static synthetic fun copy$default (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Ljava/util/List;IILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlineContent ()Ljava/util/List;
	public final fun getLevel ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$HtmlBlock : org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$HtmlBlock;
	public static synthetic fun copy$default (Lorg/jetbrains/jewel/markdown/MarkdownBlock$HtmlBlock;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$HtmlBlock;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContent ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock : org/jetbrains/jewel/markdown/MarkdownBlock {
	public abstract fun getChildren ()Ljava/util/List;
	public abstract fun isTight ()Z
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$OrderedList : org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;ZILjava/lang/String;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Z
	public final fun component3 ()I
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/util/List;ZILjava/lang/String;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$OrderedList;
	public static synthetic fun copy$default (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$OrderedList;Ljava/util/List;ZILjava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$OrderedList;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public final fun getDelimiter ()Ljava/lang/String;
	public final fun getStartFrom ()I
	public fun hashCode ()I
	public fun isTight ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$UnorderedList : org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;ZLjava/lang/String;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/util/List;ZLjava/lang/String;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$UnorderedList;
	public static synthetic fun copy$default (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$UnorderedList;Ljava/util/List;ZLjava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$UnorderedList;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public final fun getMarker ()Ljava/lang/String;
	public fun hashCode ()I
	public fun isTight ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$ListItem : org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListItem;
	public static synthetic fun copy$default (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListItem;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListItem;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$Paragraph : org/jetbrains/jewel/markdown/BlockWithInlineMarkdown, org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$Paragraph;
	public static synthetic fun copy$default (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Paragraph;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$Paragraph;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlineContent ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$ThematicBreak : org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public static final field INSTANCE Lorg/jetbrains/jewel/markdown/MarkdownBlock$ThematicBreak;
}

public final class org/jetbrains/jewel/markdown/MimeType {
	public static final field ATTR_FOLDER_TYPE Ljava/lang/String;
	public static final field ATTR_ROLE Ljava/lang/String;
	public static final field ATTR_ROOT_TAG Ljava/lang/String;
	public static final field VALUE_MANIFEST Ljava/lang/String;
	public static final field VALUE_RESOURCE Ljava/lang/String;
	public static final fun base-ip6yS68 (Ljava/lang/String;)Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lorg/jetbrains/jewel/markdown/MimeType;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public static final fun displayName-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MimeType$Known {
	public static final field $stable I
	public static final field INSTANCE Lorg/jetbrains/jewel/markdown/MimeType$Known;
	public final fun fromMarkdownLanguageName-HxXrbs8 (Ljava/lang/String;)Ljava/lang/String;
	public final fun getAGSL-ip6yS68 ()Ljava/lang/String;
	public final fun getAIDL-ip6yS68 ()Ljava/lang/String;
	public final fun getC-ip6yS68 ()Ljava/lang/String;
	public final fun getCPP-ip6yS68 ()Ljava/lang/String;
	public final fun getDART-ip6yS68 ()Ljava/lang/String;
	public final fun getGO-ip6yS68 ()Ljava/lang/String;
	public final fun getGRADLE-ip6yS68 ()Ljava/lang/String;
	public final fun getGRADLE_KTS-ip6yS68 ()Ljava/lang/String;
	public final fun getGROOVY-ip6yS68 ()Ljava/lang/String;
	public final fun getJAVA-ip6yS68 ()Ljava/lang/String;
	public final fun getJAVASCRIPT-ip6yS68 ()Ljava/lang/String;
	public final fun getJSON-ip6yS68 ()Ljava/lang/String;
	public final fun getKOTLIN-ip6yS68 ()Ljava/lang/String;
	public final fun getMANIFEST-ip6yS68 ()Ljava/lang/String;
	public final fun getPROGUARD-ip6yS68 ()Ljava/lang/String;
	public final fun getPROPERTIES-ip6yS68 ()Ljava/lang/String;
	public final fun getPROTO-ip6yS68 ()Ljava/lang/String;
	public final fun getPYTHON-ip6yS68 ()Ljava/lang/String;
	public final fun getREGEX-ip6yS68 ()Ljava/lang/String;
	public final fun getRESOURCE-ip6yS68 ()Ljava/lang/String;
	public final fun getRUST-ip6yS68 ()Ljava/lang/String;
	public final fun getSHELL-ip6yS68 ()Ljava/lang/String;
	public final fun getSQL-ip6yS68 ()Ljava/lang/String;
	public final fun getSVG-ip6yS68 ()Ljava/lang/String;
	public final fun getTEXT-ip6yS68 ()Ljava/lang/String;
	public final fun getTOML-ip6yS68 ()Ljava/lang/String;
	public final fun getTYPESCRIPT-ip6yS68 ()Ljava/lang/String;
	public final fun getUNKNOWN-ip6yS68 ()Ljava/lang/String;
	public final fun getVERSION_CATALOG-ip6yS68 ()Ljava/lang/String;
	public final fun getXML-ip6yS68 ()Ljava/lang/String;
	public final fun getYAML-ip6yS68 ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MimeTypeKt {
	public static final fun isGradle-K9GpHcc (Ljava/lang/String;)Z
	public static final fun isJava-K9GpHcc (Ljava/lang/String;)Z
	public static final fun isKotlin-K9GpHcc (Ljava/lang/String;)Z
	public static final fun isManifest-K9GpHcc (Ljava/lang/String;)Z
	public static final fun isProto-K9GpHcc (Ljava/lang/String;)Z
	public static final fun isRegex-K9GpHcc (Ljava/lang/String;)Z
	public static final fun isSql-K9GpHcc (Ljava/lang/String;)Z
	public static final fun isVersionCatalog-K9GpHcc (Ljava/lang/String;)Z
	public static final fun isXml-K9GpHcc (Ljava/lang/String;)Z
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownBlockProcessorExtension {
	public abstract fun canProcess (Lorg/commonmark/node/CustomBlock;)Z
	public abstract fun processMarkdownBlock (Lorg/commonmark/node/CustomBlock;Lorg/jetbrains/jewel/markdown/processing/MarkdownProcessor;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$CustomBlock;
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownBlockRendererExtension {
	public abstract fun canRender (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CustomBlock;)Z
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CustomBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer;Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;Landroidx/compose/runtime/Composer;I)V
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownProcessorExtension {
	public abstract fun getParserExtension ()Lorg/commonmark/parser/Parser$ParserExtension;
	public abstract fun getProcessorExtension ()Lorg/jetbrains/jewel/markdown/extensions/MarkdownBlockProcessorExtension;
	public abstract fun getTextRendererExtension ()Lorg/commonmark/renderer/text/TextContentRenderer$TextContentRendererExtension;
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownRendererExtension {
	public abstract fun getBlockRenderer ()Lorg/jetbrains/jewel/markdown/extensions/MarkdownBlockRendererExtension;
}

public final class org/jetbrains/jewel/markdown/processing/MarkdownProcessor {
	public static final field $stable I
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Z)V
	public synthetic fun <init> (Ljava/util/List;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> ([Lorg/jetbrains/jewel/markdown/extensions/MarkdownProcessorExtension;)V
	public final fun processChildren (Lorg/commonmark/node/Node;)Ljava/util/List;
	public final fun processMarkdownDocument (Ljava/lang/String;)Ljava/util/List;
}

public class org/jetbrains/jewel/markdown/rendering/DefaultInlineMarkdownRenderer : org/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/DefaultInlineMarkdownRenderer$Companion;
	public fun <init> (Ljava/util/List;)V
	public fun <init> ([Lorg/jetbrains/jewel/markdown/extensions/MarkdownProcessorExtension;)V
	public fun renderAsAnnotatedString (Ljava/util/List;Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;)Landroidx/compose/ui/text/AnnotatedString;
}

public final class org/jetbrains/jewel/markdown/rendering/DefaultInlineMarkdownRenderer$Companion {
}

public class org/jetbrains/jewel/markdown/rendering/DefaultMarkdownBlockRenderer : org/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer {
	public static final field $stable I
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling;Ljava/util/List;Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;Lkotlin/jvm/functions/Function1;)V
	public fun render (Ljava/util/List;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$BlockQuote;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$HtmlBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$OrderedList;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$UnorderedList;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListItem;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Paragraph;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock;Landroidx/compose/runtime/Composer;I)V
	public fun renderThematicBreak (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak;Landroidx/compose/runtime/Composer;I)V
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer {
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer$Companion;
	public abstract fun renderAsAnnotatedString (Ljava/util/List;Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;)Landroidx/compose/ui/text/AnnotatedString;
}

public final class org/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer$Companion {
	public final fun default (Ljava/util/List;)Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;
	public static synthetic fun default$default (Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer$Companion;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;
}

public final class org/jetbrains/jewel/markdown/rendering/InlinesStyling {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling$Companion;
	public fun <init> (Landroidx/compose/ui/text/TextStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Z)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEmphasis ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getInlineCode ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getInlineHtml ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getLink ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getRenderInlineHtml ()Z
	public final fun getStrongEmphasis ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/InlinesStyling$Companion {
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer {
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer$Companion;
	public abstract fun render (Ljava/util/List;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$BlockQuote;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$HtmlBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$OrderedList;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$UnorderedList;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListItem;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Paragraph;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock;Landroidx/compose/runtime/Composer;I)V
	public abstract fun renderThematicBreak (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak;Landroidx/compose/runtime/Composer;I)V
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Companion;
	public synthetic fun <init> (FLorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBlockQuote ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote;
	public final fun getBlockVerticalSpacing-D9Ej5fM ()F
	public final fun getCode ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code;
	public final fun getHeading ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading;
	public final fun getHtmlBlock ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock;
	public final fun getImage ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image;
	public final fun getList ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List;
	public final fun getParagraph ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph;
	public final fun getThematicBreak ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote$Companion;
	public synthetic fun <init> (Landroidx/compose/foundation/layout/PaddingValues;FJLandroidx/compose/ui/graphics/PathEffect;IJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLineColor-0d7_KjU ()J
	public final fun getLineWidth-D9Ej5fM ()F
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getPathEffect ()Landroidx/compose/ui/graphics/PathEffect;
	public final fun getStrokeCap-KaPHkGw ()I
	public final fun getTextColor-0d7_KjU ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Companion;
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFenced ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;
	public final fun getIndented ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/text/TextStyle;Landroidx/compose/foundation/layout/PaddingValues;Landroidx/compose/ui/graphics/Shape;JFJZZLandroidx/compose/ui/text/TextStyle;Landroidx/compose/foundation/layout/PaddingValues;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackground-0d7_KjU ()J
	public final fun getBorderColor-0d7_KjU ()J
	public final fun getBorderWidth-D9Ej5fM ()F
	public final fun getFillWidth ()Z
	public final fun getInfoPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getInfoPosition ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public final fun getInfoTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getScrollsHorizontally ()Z
	public final fun getShape ()Landroidx/compose/ui/graphics/Shape;
	public final fun getTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition : java/lang/Enum {
	public static final field BottomCenter Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field BottomEnd Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field BottomStart Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field Hide Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field TopCenter Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field TopEnd Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field TopStart Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static fun values ()[Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/text/TextStyle;Landroidx/compose/foundation/layout/PaddingValues;Landroidx/compose/ui/graphics/Shape;JFJZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackground-0d7_KjU ()J
	public final fun getBorderColor-0d7_KjU ()J
	public final fun getBorderWidth-D9Ej5fM ()F
	public final fun getFillWidth ()Z
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getScrollsHorizontally ()Z
	public final fun getShape ()Landroidx/compose/ui/graphics/Shape;
	public final fun getTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$Companion;
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getH1 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1;
	public final fun getH2 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2;
	public final fun getH3 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3;
	public final fun getH4 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4;
	public final fun getH5 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5;
	public final fun getH6 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6$Companion {
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN : org/jetbrains/jewel/markdown/rendering/WithInlinesStyling, org/jetbrains/jewel/markdown/rendering/WithUnderline {
	public abstract fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/text/TextStyle;Landroidx/compose/foundation/layout/PaddingValues;Landroidx/compose/ui/graphics/Shape;JFJZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackground-0d7_KjU ()J
	public final fun getBorderColor-0d7_KjU ()J
	public final fun getBorderWidth-D9Ej5fM ()F
	public final fun getFillWidth ()Z
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getShape ()Landroidx/compose/ui/graphics/Shape;
	public final fun getTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/Alignment;Landroidx/compose/ui/layout/ContentScale;Landroidx/compose/foundation/layout/PaddingValues;Landroidx/compose/ui/graphics/Shape;JFJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAlignment ()Landroidx/compose/ui/Alignment;
	public final fun getBackground-0d7_KjU ()J
	public final fun getBorderColor-0d7_KjU ()J
	public final fun getBorderWidth-D9Ej5fM ()F
	public final fun getContentScale ()Landroidx/compose/ui/layout/ContentScale;
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getShape ()Landroidx/compose/ui/graphics/Shape;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Companion;
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOrdered ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered;
	public final fun getUnordered ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/text/TextStyle;FFIFFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getItemVerticalSpacing-D9Ej5fM ()F
	public final fun getItemVerticalSpacingTight-D9Ej5fM ()F
	public final fun getNumberContentGap-D9Ej5fM ()F
	public final fun getNumberMinWidth-D9Ej5fM ()F
	public final fun getNumberStyle ()Landroidx/compose/ui/text/TextStyle;
	public final fun getNumberTextAlign-e0LSkKk ()I
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered$Companion;
	public synthetic fun <init> (Ljava/lang/Character;Landroidx/compose/ui/text/TextStyle;FFFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBullet ()Ljava/lang/Character;
	public final fun getBulletContentGap-D9Ej5fM ()F
	public final fun getBulletStyle ()Landroidx/compose/ui/text/TextStyle;
	public final fun getItemVerticalSpacing-D9Ej5fM ()F
	public final fun getItemVerticalSpacingTight-D9Ej5fM ()F
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph : org/jetbrains/jewel/markdown/rendering/WithInlinesStyling {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph$Companion;
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak$Companion;
	public synthetic fun <init> (Landroidx/compose/foundation/layout/PaddingValues;FJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLineColor-0d7_KjU ()J
	public final fun getLineWidth-D9Ej5fM ()F
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak$Companion {
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/WithInlinesStyling {
	public abstract fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/WithUnderline {
	public abstract fun getUnderlineColor-0d7_KjU ()J
	public abstract fun getUnderlineGap-D9Ej5fM ()F
	public abstract fun getUnderlineWidth-D9Ej5fM ()F
}

